[{"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\index.js":"1","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\App.js":"2","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reportWebVitals.js":"3","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\store.js":"4","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\home.js":"5","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\login.js":"6","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\private-route.js":"7","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reducers\\index.js":"8","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reducers\\auth-reducer.js":"9","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\types.js":"10","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\auth\\login.js":"11","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\auth\\get-user.js":"12","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\navbar.js":"13","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\letter-avatar.js":"14","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\auth\\logout.js":"15","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-cars.js":"16","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reducers\\car-reducer.js":"17","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\car-detail.js":"18","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\list-item.js":"19","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\car-add.js":"20","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\address-form.js":"21","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-manufacturers.js":"22","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-suppliers.js":"23","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-colors.js":"24"},{"size":641,"mtime":1609152050124,"results":"25","hashOfConfig":"26"},{"size":1760,"mtime":1609344408413,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1609150077583,"results":"28","hashOfConfig":"26"},{"size":355,"mtime":1609150467248,"results":"29","hashOfConfig":"26"},{"size":7540,"mtime":1609590278821,"results":"30","hashOfConfig":"26"},{"size":6611,"mtime":1609595721835,"results":"31","hashOfConfig":"26"},{"size":499,"mtime":1609151771690,"results":"32","hashOfConfig":"26"},{"size":221,"mtime":1609334201085,"results":"33","hashOfConfig":"26"},{"size":1477,"mtime":1609156720949,"results":"34","hashOfConfig":"26"},{"size":800,"mtime":1609518419380,"results":"35","hashOfConfig":"26"},{"size":1085,"mtime":1609161228204,"results":"36","hashOfConfig":"26"},{"size":1171,"mtime":1609518526623,"results":"37","hashOfConfig":"26"},{"size":2652,"mtime":1609595746078,"results":"38","hashOfConfig":"26"},{"size":1980,"mtime":1609519472608,"results":"39","hashOfConfig":"26"},{"size":462,"mtime":1609160865562,"results":"40","hashOfConfig":"26"},{"size":871,"mtime":1609520102374,"results":"41","hashOfConfig":"26"},{"size":2782,"mtime":1609518490813,"results":"42","hashOfConfig":"26"},{"size":15381,"mtime":1609590022647,"results":"43","hashOfConfig":"26"},{"size":628,"mtime":1609341485738,"results":"44","hashOfConfig":"26"},{"size":957,"mtime":1609518592840,"results":"45","hashOfConfig":"26"},{"size":18547,"mtime":1609595941569,"results":"46","hashOfConfig":"26"},{"size":964,"mtime":1609520120914,"results":"47","hashOfConfig":"26"},{"size":901,"mtime":1609421501689,"results":"48","hashOfConfig":"26"},{"size":888,"mtime":1609518445407,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hbazx0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\index.js",[],["105","106"],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\App.js",["107","108"],"import { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/home';\nimport Login from './pages/login';\nimport PrivateRoute from './components/private-route';\nimport Navbar from './components/navbar';\nimport CarDetail from './pages/car-detail';\nimport CarAdd from './pages/car-add';\nimport { getUser } from './actions/auth/get-user';\n\nconst App = () => {\n    const { isLoading } = useSelector((state) => state.auth);\n    const dispatch = useDispatch();\n\n    const getUserCb = useCallback(() => dispatch(getUser()), [\n        dispatch,\n        getUser,\n    ]);\n\n    useEffect(() => {\n        console.log('GET USER CALLED');\n        getUserCb();\n    }, []);\n\n    return (\n        <Router>\n            <Navbar />\n            {isLoading ? (\n                <div\n                    style={{\n                        width: '100%',\n                        height: '90%',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                    }}\n                >\n                    <CircularProgress />\n                </div>\n            ) : (\n                <Switch>\n                    <Route exact path='/login' component={Login} />\n                    <PrivateRoute exact path='/' Children={Home} />\n                    <PrivateRoute exact path='/:id' Children={CarDetail} />\n                    <PrivateRoute exact path='/cars/add' Children={CarAdd} />\n                </Switch>\n            )}\n        </Router>\n    );\n};\n\nexport default App;\n","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reportWebVitals.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\store.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\home.js",["109","110","111"],"import { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { DataGrid, GridOverlay } from '@material-ui/data-grid';\r\nimport { getCars } from '../actions/cars/get-cars';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexDirection: 'column',\r\n            '& .ant-empty-img-1': {\r\n                fill: theme.palette.type === 'light' ? '#aeb8c2' : '#262626',\r\n            },\r\n            '& .ant-empty-img-2': {\r\n                fill: theme.palette.type === 'light' ? '#f5f5f7' : '#595959',\r\n            },\r\n            '& .ant-empty-img-3': {\r\n                fill: theme.palette.type === 'light' ? '#dce0e6' : '#434343',\r\n            },\r\n            '& .ant-empty-img-4': {\r\n                fill: theme.palette.type === 'light' ? '#fff' : '#1c1c1c',\r\n            },\r\n            '& .ant-empty-img-5': {\r\n                fillOpacity: theme.palette.type === 'light' ? '0.8' : '0.08',\r\n                fill: theme.palette.type === 'light' ? '#f5f5f5' : '#fff',\r\n            },\r\n        },\r\n        label: {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\n\r\nfunction CustomNoRowsOverlay() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <GridOverlay className={classes.root}>\r\n            <svg\r\n                width='120'\r\n                height='100'\r\n                viewBox='0 0 184 152'\r\n                aria-hidden\r\n                focusable='false'\r\n            >\r\n                <g fill='none' fillRule='evenodd'>\r\n                    <g transform='translate(24 31.67)'>\r\n                        <ellipse\r\n                            className='ant-empty-img-5'\r\n                            cx='67.797'\r\n                            cy='106.89'\r\n                            rx='67.797'\r\n                            ry='12.668'\r\n                        />\r\n                        <path\r\n                            className='ant-empty-img-1'\r\n                            d='M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z'\r\n                        />\r\n                        <path\r\n                            className='ant-empty-img-2'\r\n                            d='M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z'\r\n                        />\r\n                        <path\r\n                            className='ant-empty-img-3'\r\n                            d='M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z'\r\n                        />\r\n                    </g>\r\n                    <path\r\n                        className='ant-empty-img-3'\r\n                        d='M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z'\r\n                    />\r\n                    <g\r\n                        className='ant-empty-img-4'\r\n                        transform='translate(149.65 15.383)'\r\n                    >\r\n                        <ellipse cx='20.654' cy='3.167' rx='2.849' ry='2.815' />\r\n                        <path d='M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z' />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n            <div className={classes.label}>No Rows</div>\r\n        </GridOverlay>\r\n    );\r\n}\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { isLoading, cars } = useSelector((state) => state.car);\r\n\r\n    const data = {\r\n        columns: [\r\n            { field: 'id', width: 300, hide: true },\r\n            {\r\n                field: 'image_url',\r\n                headerName: 'Resim',\r\n                renderCell: (params) => (\r\n                    <>\r\n                        <img\r\n                            src={params.value || '/araba2.jpg'}\r\n                            height='75'\r\n                            alt='araba'\r\n                        />\r\n                    </>\r\n                ),\r\n            },\r\n            {\r\n                field: 'title',\r\n                headerName: 'Başlık',\r\n                width: 350,\r\n                renderCell: (params) => (\r\n                    <Link onClick={(e) => e.preventDefault()}>\r\n                        <RouterLink to={params.getValue('id') || ''}>\r\n                            {params.value}\r\n                        </RouterLink>\r\n                    </Link>\r\n                ),\r\n            },\r\n            {\r\n                field: 'sale_price',\r\n                headerName: 'Satış Fiyatı',\r\n                width: 120,\r\n                valueFormatter: (params) => formatPrice(params.value),\r\n            },\r\n            {\r\n                field: 'purchase_price',\r\n                headerName: 'Alış Fiyatı',\r\n                width: 120,\r\n                valueFormatter: (params) => formatPrice(params.value),\r\n            },\r\n            {\r\n                headerName: 'Satıldı Mı',\r\n                field: 'is_sold',\r\n                width: 120,\r\n                valueFormatter: (params) =>\r\n                    params.value === 'SOLD' ? 'Satıldı' : 'Satılmadı',\r\n            },\r\n            { field: 'model', width: 120 },\r\n            { field: 'year', width: 120, headerName: 'Yıl' },\r\n            {\r\n                field: 'is_new',\r\n                headerName: 'Yeni Mi',\r\n                width: 120,\r\n                valueFormatter: (params) =>\r\n                    params.value === 'NEW' ? 'Sıfır' : 'İkinci el',\r\n            },\r\n        ],\r\n        rows: cars.map((car) => ({ ...car, id: car.car_id })),\r\n    };\r\n\r\n    const getCarsCb = useCallback(() => dispatch(getCars()), [\r\n        dispatch,\r\n        getCars,\r\n    ]);\r\n\r\n    const formatPrice = (price) =>\r\n        new Intl.NumberFormat('tr-TR', {\r\n            style: 'currency',\r\n            currency: 'TRY',\r\n            minimumFractionDigits: 2,\r\n        }).format(price);\r\n\r\n    useEffect(() => {\r\n        getCarsCb();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ height: '80%', width: '100%' }}>\r\n            <Button\r\n                variant='contained'\r\n                color='primary'\r\n                to='/cars/add'\r\n                component={RouterLink}\r\n            >\r\n                Yeni Araba Ekle\r\n            </Button>\r\n            <DataGrid\r\n                components={{\r\n                    noRowsOverlay: CustomNoRowsOverlay,\r\n                }}\r\n                rowHeight={75}\r\n                loading={isLoading}\r\n                autoPageSize\r\n                {...data}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\login.js",["112","113"],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\private-route.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reducers\\index.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reducers\\auth-reducer.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\types.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\auth\\login.js",["114"],"import Cookies from 'js-cookie';\r\nimport { AuthActionTypes } from '../types';\r\n\r\nexport const loginUser = (data) => (dispatch) => {\r\n    fetch('http://localhost:8080/api/personels/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data),\r\n    })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            if (res.data) {\r\n                dispatch({\r\n                    type: AuthActionTypes.LOGIN_SUCCESS,\r\n                    payload: res.data[0],\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AuthActionTypes.LOGIN_FAIL,\r\n                    payload: {\r\n                        error: res.error,\r\n                    },\r\n                });\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: AuthActionTypes.LOGIN_FAIL,\r\n                payload: {\r\n                    error: err,\r\n                },\r\n            });\r\n        });\r\n};\r\n","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\auth\\get-user.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\navbar.js",["115"],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\letter-avatar.js",["116"],"import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { logout } from '../actions/auth/logout';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        orange: {\r\n            color: theme.palette.getContrastText(deepOrange[500]),\r\n            backgroundColor: deepOrange[500],\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function LetterAvatar({ firstLetter }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = useCallback(() => dispatch(logout()), [\r\n        dispatch,\r\n        logout,\r\n    ]);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLout = () => {\r\n        handleLogout();\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button type='button' onClick={handleClick}>\r\n                <Avatar className={classes.orange}>{firstLetter}</Avatar>\r\n            </Button>\r\n            <Menu\r\n                id='simple-menu'\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n                <MenuItem onClick={handleClose}>Hesabım</MenuItem>\r\n                <MenuItem onClick={handleLout}>Çıkış</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\auth\\logout.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-cars.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\reducers\\car-reducer.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\car-detail.js",["117"],"import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport ListItem from '../components/list-item';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nconst CarDetail = () => {\r\n    const { cars } = useSelector((state) => state.car);\r\n    const { user } = useSelector((state) => state.auth);\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [openStock, setOpenStock] = useState(false);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleStockClickOpen = () => {\r\n        setOpenStock(true);\r\n    };\r\n\r\n    const handleStockClose = () => {\r\n        setOpenStock(false);\r\n    };\r\n\r\n    const car = cars.find((car) => car.car_id === id);\r\n\r\n    const onSubmit = async () => {\r\n        const customerBody = {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            birth_date: new Date(Date.now()),\r\n        };\r\n\r\n        const customerRes = await fetch('http://localhost:8080/api/customers', {\r\n            method: 'POST',\r\n            body: JSON.stringify(customerBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n        });\r\n\r\n        const customerResJson = await customerRes.json();\r\n\r\n        const invoiceBody = {\r\n            serial_number: Math.floor(Math.random() * 10000),\r\n            price: car.sale_price,\r\n        };\r\n        const invoiceRes = await fetch(\r\n            'http://localhost:8080/api/sales/invoices',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(invoiceBody),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            },\r\n        );\r\n\r\n        const invoiceResJson = await invoiceRes.json();\r\n\r\n        const saleBody = {\r\n            customer_id: customerResJson.data[0].id,\r\n            personel_id: user.id,\r\n            car_id: car.car_id,\r\n            invoice_id: invoiceResJson.data[0].id,\r\n            sale_date: new Date(Date.now()),\r\n        };\r\n\r\n        const saleRes = await fetch('http://localhost:8080/api/sales', {\r\n            method: 'POST',\r\n            body: JSON.stringify(saleBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n        });\r\n\r\n        await saleRes.json();\r\n\r\n        handleClose();\r\n\r\n        setIsSuccess(true);\r\n\r\n        setTimeout(() => {\r\n            history.push(`/${car.car_id}`);\r\n        }, 2000);\r\n    };\r\n\r\n    const handleRemoveStock = async () => {\r\n        await fetch(`http://localhost:8080/api/cars/${car.car_id}`, {\r\n            method: 'DELETE',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        handleStockClose();\r\n        history.push('/');\r\n    };\r\n\r\n    const formatPrice = (price) =>\r\n        new Intl.NumberFormat('tr-TR', {\r\n            style: 'currency',\r\n            currency: 'TRY',\r\n            minimumFractionDigits: 2,\r\n        }).format(price);\r\n\r\n    const renderSuccessAlert = () => {\r\n        return (\r\n            <Collapse in={isSuccess}>\r\n                <Alert\r\n                    action={\r\n                        <IconButton\r\n                            aria-label='close'\r\n                            color='inherit'\r\n                            size='small'\r\n                            onClick={() => setIsSuccess(false)}\r\n                        >\r\n                            <CloseIcon fontSize='inherit' />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    Close me!\r\n                </Alert>\r\n            </Collapse>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{car.title} - Stock Management System</title>\r\n            </Helmet>\r\n            <Container maxWidth='lg'>\r\n                <div className={classes.root}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            {isSuccess && renderSuccessAlert()}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant='h5' component='h5'>\r\n                                {car.title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            <img\r\n                                src={car.image_url || '/araba.jpg'}\r\n                                alt='araba'\r\n                                width='85%'\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant='h6' component='h6'>\r\n                                        {formatPrice(car.sale_price)}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        className={classes.button}\r\n                                        onClick={handleStockClickOpen}\r\n                                        disabled={\r\n                                            car.is_sold === 'SOLD'\r\n                                                ? true\r\n                                                : false\r\n                                        }\r\n                                    >\r\n                                        Stoktan çıkar\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Dialog\r\n                                    open={openStock}\r\n                                    onClose={handleStockClose}\r\n                                    aria-labelledby='alert-dialog-title'\r\n                                    aria-describedby='alert-dialog-description'\r\n                                >\r\n                                    <DialogTitle id='alert-dialog-title'>\r\n                                        {'Emin misiniz?'}\r\n                                    </DialogTitle>\r\n                                    <DialogContent>\r\n                                        <DialogContentText id='alert-dialog-description'>\r\n                                            Lorem ipsum dolor sit amet\r\n                                            consectetur adipisicing elit. Ea\r\n                                            tenetur temporibus voluptatem\r\n                                            aperiam est voluptate enim ut\r\n                                            explicabo quis? Beatae, deserunt\r\n                                            aperiam! Veniam, accusantium alias\r\n                                            in iusto non nostrum esse.\r\n                                        </DialogContentText>\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button\r\n                                            onClick={handleStockClose}\r\n                                            color='primary'\r\n                                        >\r\n                                            Reddet\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={handleRemoveStock}\r\n                                            color='primary'\r\n                                            autoFocus\r\n                                        >\r\n                                            Kabul et\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n                                {/* SELL BUTTON */}\r\n                                <Grid item xs={2}>\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='secondary'\r\n                                        className={classes.button}\r\n                                        onClick={handleClickOpen}\r\n                                        disabled={\r\n                                            car.is_sold === 'SOLD'\r\n                                                ? true\r\n                                                : false\r\n                                        }\r\n                                    >\r\n                                        {car.is_sold === 'SOLD'\r\n                                            ? 'Satıldı'\r\n                                            : 'Sat'}\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Dialog\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby='form-dialog-title'\r\n                                >\r\n                                    <DialogTitle id='form-dialog-title'>\r\n                                        Müşteri Bilgileri\r\n                                    </DialogTitle>\r\n                                    <DialogContent>\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            margin='dense'\r\n                                            id='first_name'\r\n                                            label='Ad'\r\n                                            fullWidth\r\n                                            value={firstName}\r\n                                            onChange={(e) =>\r\n                                                setFirstName(e.target.value)\r\n                                            }\r\n                                        />\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            margin='dense'\r\n                                            id='last_name'\r\n                                            label='Soyad'\r\n                                            fullWidth\r\n                                            value={lastName}\r\n                                            onChange={(e) =>\r\n                                                setLastName(e.target.value)\r\n                                            }\r\n                                        />\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button\r\n                                            onClick={handleClose}\r\n                                            color='primary'\r\n                                        >\r\n                                            İptal\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={onSubmit}\r\n                                            color='primary'\r\n                                        >\r\n                                            Kaydet\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n                            </Grid>\r\n\r\n                            <hr />\r\n                            <Grid container spacing={2}>\r\n                                <ListItem name='Model' val={car.model} />\r\n                                <ListItem name='Yıl' val={car.year} />\r\n                                <ListItem\r\n                                    name='Yeni mi'\r\n                                    val={\r\n                                        car.is_new === 'NEW'\r\n                                            ? 'Sıfır'\r\n                                            : 'İkinci el'\r\n                                    }\r\n                                />\r\n                                <ListItem\r\n                                    name='Giriş tarihi'\r\n                                    val={new Date(\r\n                                        car.enter_date,\r\n                                    ).toLocaleDateString('tr-TR')}\r\n                                />\r\n                                <ListItem\r\n                                    name='Alış fiyatı'\r\n                                    val={formatPrice(car.purchase_price)}\r\n                                />\r\n                                <ListItem\r\n                                    name='Satıldı mı'\r\n                                    val={\r\n                                        car.is_sold === 'SOLD'\r\n                                            ? 'Satıldı'\r\n                                            : 'Satılmadı'\r\n                                    }\r\n                                />\r\n                                <ListItem name='Marka' val={car.car_brand} />\r\n                                <ListItem name='Renk' val={car.car_color} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <strong>Açıklama</strong>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {car.car_description}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CarDetail;\r\n","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\list-item.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\pages\\car-add.js",["118","119","120"],"import { useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddressForm from '../components/address-form';\r\nimport { getManufacturers } from '../actions/cars/get-manufacturers';\r\nimport { getSuppliers } from '../actions/cars/get-suppliers';\r\nimport { getColors } from '../actions/cars/get-colors';\r\n\r\nconst CarAdd = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const getManufacturersCb = useCallback(() => dispatch(getManufacturers()), [\r\n        dispatch,\r\n        getManufacturers,\r\n    ]);\r\n    const getSuppliersCb = useCallback(() => dispatch(getSuppliers()), [\r\n        dispatch,\r\n        getSuppliers,\r\n    ]);\r\n    const getColorsCb = useCallback(() => dispatch(getColors()), [\r\n        dispatch,\r\n        getColors,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getManufacturersCb();\r\n        getSuppliersCb();\r\n        getColorsCb();\r\n    });\r\n\r\n    return <AddressForm />;\r\n};\r\nexport default CarAdd;\r\n","C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\components\\address-form.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-manufacturers.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-suppliers.js",[],"C:\\Users\\Emre\\code\\Nodejs\\stock-management-client\\src\\actions\\cars\\get-colors.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":18,"column":62,"nodeType":"127","endLine":21,"endColumn":6,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":26,"column":8,"nodeType":"127","endLine":26,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":17},{"ruleId":"125","severity":1,"message":"135","line":154,"column":62,"nodeType":"127","endLine":157,"endColumn":6,"suggestions":"136"},{"ruleId":"125","severity":1,"message":"137","line":168,"column":8,"nodeType":"127","endLine":168,"endColumn":10,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":48,"column":38,"nodeType":"133","messageId":"134","endLine":48,"endColumn":47},{"ruleId":"125","severity":1,"message":"140","line":54,"column":9,"nodeType":"127","endLine":54,"endColumn":30,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":15},{"ruleId":"131","severity":1,"message":"143","line":4,"column":36,"nodeType":"133","messageId":"134","endLine":4,"endColumn":41},{"ruleId":"125","severity":1,"message":"144","line":27,"column":64,"nodeType":"127","endLine":30,"endColumn":6,"suggestions":"145"},{"ruleId":"131","severity":1,"message":"146","line":16,"column":8,"nodeType":"133","messageId":"134","endLine":16,"endColumn":11},{"ruleId":"125","severity":1,"message":"147","line":11,"column":80,"nodeType":"127","endLine":14,"endColumn":6,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"149","line":15,"column":72,"nodeType":"127","endLine":18,"endColumn":6,"suggestions":"150"},{"ruleId":"125","severity":1,"message":"151","line":19,"column":66,"nodeType":"127","endLine":22,"endColumn":6,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'getUser'. Either exclude it or remove the dependency array. Outer scope values like 'getUser' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["155"],"React Hook useEffect has a missing dependency: 'getUserCb'. Either include it or remove the dependency array.",["156"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","React Hook useCallback has an unnecessary dependency: 'getCars'. Either exclude it or remove the dependency array. Outer scope values like 'getCars' aren't valid dependencies because mutating them doesn't re-render the component.",["157"],"React Hook useEffect has a missing dependency: 'getCarsCb'. Either include it or remove the dependency array.",["158"],"'isLoading' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'loginUser'. Either exclude it or remove the dependency array. Outer scope values like 'loginUser' aren't valid dependencies because mutating them doesn't re-render the component.",["159"],"'Cookies' is defined but never used.","'Theme' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'logout'. Either exclude it or remove the dependency array. Outer scope values like 'logout' aren't valid dependencies because mutating them doesn't re-render the component.",["160"],"'Box' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'getManufacturers'. Either exclude it or remove the dependency array. Outer scope values like 'getManufacturers' aren't valid dependencies because mutating them doesn't re-render the component.",["161"],"React Hook useCallback has an unnecessary dependency: 'getSuppliers'. Either exclude it or remove the dependency array. Outer scope values like 'getSuppliers' aren't valid dependencies because mutating them doesn't re-render the component.",["162"],"React Hook useCallback has an unnecessary dependency: 'getColors'. Either exclude it or remove the dependency array. Outer scope values like 'getColors' aren't valid dependencies because mutating them doesn't re-render the component.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"164","fix":"168"},{"desc":"169","fix":"170"},{"desc":"164","fix":"171"},{"desc":"164","fix":"172"},{"desc":"164","fix":"173"},{"desc":"164","fix":"174"},{"desc":"164","fix":"175"},"Update the dependencies array to be: [dispatch]",{"range":"176","text":"177"},"Update the dependencies array to be: [getUserCb]",{"range":"178","text":"179"},{"range":"180","text":"177"},"Update the dependencies array to be: [getCarsCb]",{"range":"181","text":"182"},{"range":"183","text":"177"},{"range":"184","text":"177"},{"range":"185","text":"177"},{"range":"186","text":"177"},{"range":"187","text":"177"},[745,787],"[dispatch]",[881,883],"[getUserCb]",[6573,6618],[6884,6886],"[getCarsCb]",[2020,2041],[1020,1064],[483,537],[612,662],[731,778]]